name: test_react_frontend

on: [push, pull_request]

jobs:
  test_frontend:
    env:
      SUBDIRECTORY: react_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: ['12', '14', '16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${SUBDIRECTORY}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd $SUBDIRECTORY
        npm install

    - name: Run tests
      run: |
        cd $SUBDIRECTORY
        npm run test

  test_e2e:
    env:
      SUBDIRECTORY: react_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        node: ['16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install Python dependencies
      run: |
        python -m pip install poetry
        poetry install

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${SUBDIRECTORY}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd $SUBDIRECTORY
        npm install

    - name: Run e2e tests
      run: |
        poetry run pytest $SUBDIRECTORY/test_frontend/test_e2e.py

  test_integration:
    env:
      SUBDIRECTORY: react_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
        node: ['16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install Python dependencies
      run: |
        python -m pip install poetry
        poetry install

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${SUBDIRECTORY}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd $SUBDIRECTORY
        npm install

    - name: Start MongoDB
      run: |
        docker run --rm -d --name mongodb_test -p 27017-27019:27017-27019 mongo:5.0.0

    - name: Start Postgres
      run: |
        docker run --rm -d --name postgres_test -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=changeme postgres:9.6.23-alpine3.14

    - name: Run integration tests
      run: |
        poetry run pytest $SUBDIRECTORY/test_frontend/test_integration.py

  deploy_frontend:
    env:
      SUBDIRECTORY: react_frontend
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['16']
    runs-on: ${{ matrix.os }}
    needs: [test_frontend, test_e2e, test_integration]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${SUBDIRECTORY}-node-production-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd $SUBDIRECTORY
        npm install --production

    - name: Build frontend
      run: |
        cd $SUBDIRECTORY
        npm run build

#    - name: Deploy to GitHub Pages
#      if: github.ref == 'refs/heads/master'
#      uses: crazy-max/ghaction-github-pages@v2
#      with:
#        committer: Deployer Bot <deploy@foo.bar>
#        author: Deployer Bot <deploy@foo.bar>
#        allow_empty_commit: false
#        target_branch: gh-pages
#        build_dir: react_frontend/build
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
