name: test_fastapi_server


on:
  push:
    paths:
    - burny_common/**
    - fastapi_server/**
    - .github/workflows/test_fastapi_server.yml
  pull_request:
    branches:
    - master
    - develop

env:
  SUBDIRECTORY: fastapi_server
  VERSION_NUMBER: 1.0.0

jobs:
  test_backend:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Make poetry use local .venv folder
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ matrix.os }}-$(python --version)-poetry-${{ env.SUBDIRECTORY }}-${{ hashFiles('poetry.lock') }}

    - name: Install Python dependencies
      working-directory: ${{ env.SUBDIRECTORY }}
      run: |
        poetry install

    - name: Run Python tests
      working-directory: ${{ env.SUBDIRECTORY }}
      run: |
        poetry run pytest

  build_and_deploy_docker_image:
    needs: [test_backend]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Build docker image
      working-directory: fastapi_server
      run: |
        docker build -t burnysc2/fastapi_server:latest .
        docker build -t burnysc2/fastapi_server:${{ env.VERSION_NUMBER}} .

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Upload docker image
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      run: |
        docker push burnysc2/fastapi_server:latest
        docker push burnysc2/fastapi_server:${{ env.VERSION_NUMBER}}

  deploy_backend:
    needs: [build_and_deploy_docker_image]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      USERNAME: fastapiserver
    if: github.ref == 'refs/heads/develop'

    steps:
#    - uses: actions/checkout@v2

    - name: Update docker image on server and restart server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        port: 22
        username: ${{ env.USERNAME }}
        key: ${{ secrets.FASTAPISERVERKEY }}
        passphrase: ''
        script: |
          sudo /bin/systemctl disable --now ${{ env.USERNAME }}
          sudo systemctl daemon-reload
          docker pull burnysc2/fastapi_server:latest
          sudo /bin/systemctl enable --now ${{ env.USERNAME }}

#    - name: Update server files
#      uses: appleboy/scp-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        port: 22
#        username: ${{ env.USERNAME }}
#        key: ${{ secrets.FASTAPISERVERKEY }}
#        passphrase: ''
#        source: .
#        target: /home/${{ env.USERNAME }}/${{ env.USERNAME }}
