name: test_svelte_frontend


on:
  push:
    paths:
    - burny_common/**
    - fastapi_server/**
    - poetry.lock
    - svelte_frontend/**
    - .github/workflows/test_svelte_frontend.yml
  pull_request:
    branches:
    - master
    - develop

jobs:
  test_svelte_frontend:
    env:
      SUBDIRECTORY: svelte_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: ['14', '16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${{ env.SUBDIRECTORY }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd ${{ env.SUBDIRECTORY }}
        npm install

    - name: Run build command
      run: |
        cd ${{ env.SUBDIRECTORY }}
        npm run build
      if: ${{ matrix.node != '12' }}

      # - name: Run tests
      #   run: |
      #       npm run test

  test_e2e:
    env:
      SUBDIRECTORY: svelte_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        node: ['16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install Python dependencies
      run: |
        python -m pip install poetry
        poetry install

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${{ env.SUBDIRECTORY }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd ${{ env.SUBDIRECTORY }}
        npm install

    - name: Run e2e tests
      run: |
        poetry run pytest ${{ env.SUBDIRECTORY }}/test_frontend/test_e2e.py


  test_integration:
    env:
      SUBDIRECTORY: svelte_frontend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
        node: ['16']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install Python dependencies
      run: |
        python -m pip install poetry
        poetry install

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ matrix.node }}-${{ env.SUBDIRECTORY }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      run: |
        cd ${{ env.SUBDIRECTORY }}
        npm install

    - name: Run integration tests
      run: |
        poetry run pytest ${{ env.SUBDIRECTORY }}/test_frontend/test_integration.py
