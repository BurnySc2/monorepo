name: run_xonsh_script


on: [push, pull_request]

env:
  SUBDIRECTORY: check_python_code

jobs:
  run_xonsh_script:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
        node: ['16', '18']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - name: Install poetry and xonsh
      run: |
        pip install poetry xonsh[full]

    - name: Make poetry use local .venv folder
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: ${{ env.SUBDIRECTORY }}/.venv
        key: ${{ matrix.os }}-${{ steps.setup-python.outputs.python-version }}-poetry-${{ env.SUBDIRECTORY }}-${{ hashFiles('poetry.lock') }}

    - name: Cache npm
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ matrix.os }}-${{ matrix.node }}-${{ env.SUBDIRECTORY }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install Python dependencies
      run: |
        poetry install

    - name: Format, lint and test
      run: |
        xonsh run_tests.xsh run --pylint --pytest --npmlint --npmtest --all
