name: test_stream_announcer


on:
  push:
    paths:
    - twitch_stream_announcer/**
    - .github/workflows/test_stream_announcer.yml
  pull_request:
    branches:
    - develop

env:
  SUBDIRECTORY: twitch_stream_announcer
  IMAGENAME: twitch_stream_announcer
  VERSION_NUMBER: 1.0.0

jobs:
  test_stream_announcer:
    name: test_stream_announcer_py${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

      # https://earthly.dev/get-earthly
    - name: Install Earthly
      run: sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap --with-autocomplete'

    - name: Install
      working-directory: ${{ env.SUBDIRECTORY }}
      run: |
        touch .env
        earthly +install-dev --verbose true --PYTHONVERSION=${{ matrix.python-version }}

    - name: Run code checks and tests
      working-directory: ${{ env.SUBDIRECTORY }}
      run: earthly +all --verbose true --PYTHONVERSION=${{ matrix.python-version }}

  build_and_deploy_docker_image:
    needs: [test_stream_announcer]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Build docker image
      working-directory: ${{ env.SUBDIRECTORY }}
      run: |
        docker build -t burnysc2/${{ env.IMAGENAME }}:latest .
        docker build -t burnysc2/${{ env.IMAGENAME }}:${{ env.VERSION_NUMBER}} .

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Upload docker image (develop)
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      run: |
        docker push burnysc2/${{ env.IMAGENAME }}:${{ env.VERSION_NUMBER}}
        docker push burnysc2/${{ env.IMAGENAME }}:latest

  deploy_backend_dev:
    if: github.ref == 'refs/heads/develop'
    needs: [build_and_deploy_docker_image]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      USERNAME: announcer

    steps:
      # Requires the following 3 lines added to "visudo" on the server
      # announcer ALL=(ALL) NOPASSWD: /bin/systemctl disable --now announcer
      # announcer ALL=(ALL) NOPASSWD: /bin/systemctl daemon-reload
      # announcer ALL=(ALL) NOPASSWD: /bin/systemctl enable --now announcer
    - name: Update docker image on server and restart server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        port: 22
        username: ${{ env.USERNAME }}
        key: ${{ secrets.STREAM_ANNOUNCER_SSH_KEY }}
        passphrase: ''
        script: |
          sudo /bin/systemctl disable --now ${{ env.USERNAME }}
          docker image prune -af
          docker pull burnysc2/${{ env.IMAGENAME }}:latest
          sudo /bin/systemctl enable --now ${{ env.USERNAME }}
