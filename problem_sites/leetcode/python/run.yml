# TODO add to workflow, then remove this file

name: Runbenchmarks
on: [push]

jobs:
  python:
    name: Run Python solutions

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install

    - name: Run pytest benchmarks
      run: |
        poetry run pytest


  rust:
    name: Run Rust solutions

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
#        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly]

    steps:
    # https://github.com/actions-rs/toolchain
    - uses: actions/checkout@v1

    # Cache
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install specific nightly version
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2019-11-01
        override: true

    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check

    - name: Run clippy
      run: |
        rustup component add clippy
        cargo clippy

    - name: Test
      run: cargo test --verbose --release

    - name: Run rust benchmarks
      run: cargo bench

    - name: Build
      run: cargo build --verbose --release

