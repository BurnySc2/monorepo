networks:
  '{{secrets.TRAFIK_NETWORK}}':
    external: true

services:
  # Web server with server side rendering
  webserver:
    container_name: litestar_server
    hostname: litestar_server
    pull_policy: always
    image: burnysc2/fastapi_server:latest_dev
    command: poetry run litestar run --host 0.0.0.0 --port 8000
    restart: unless-stopped
    networks:
    - '{{ secrets.TRAFIK_NETWORK }}'
    env_file:
      - .env
    volumes:
      - ./data:/root/fastapi_server/data
    labels:
    - traefik.enable=true
    - traefik.http.routers.fastapi.rule=Host(`apidev.burnysc2.xyz`)
    - traefik.http.services.fastapi.loadbalancer.server.port=8000
    - traefik.http.routers.fastapi.tls=true
    - traefik.http.routers.fastapi.tls.certresolver=production

  # Responsible for converting texts to audio
  convert_audiobook_worker:
    image: burnysc2/fastapi_server:latest
    container_name: convert_audiobook_worker
    command: poetry run python workers/convert_audiobook.py
    pull_policy: always
    # Has no volume because all files are temporary
    # If changes occur, they will be saved in postgres or minio
    deploy:
      # TODO change me
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 2048M
      restart_policy:
        # Wait 60s before restarting
        delay: 60s
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=MYDBURL
      - MINIO_URL=my minio api url

# Background workers for transcription
