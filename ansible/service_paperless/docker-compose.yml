version: '3.4'

networks:
  '{{secrets.TRAFIK_NETWORK}}':
    external: true

services:
  broker:
    container_name: paperless-broker
    hostname: broker
    image: docker.io/library/redis:7
    restart: unless-stopped
    networks:
    - '{{ secrets.TRAFIK_NETWORK }}'
    volumes:
    - redisdata:/data

  webserver:
    container_name: paperless-webserver
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
    - broker
    networks:
    - '{{ secrets.TRAFIK_NETWORK }}'
    labels:
    - traefik.enable=true
    - traefik.http.routers.{{ secrets.PAPERLESS.USERNAME }}.rule=Host(`{{ secrets.PAPERLESS.USERNAME }}.{{ secrets.MY_DOMAIN }}`)
    - traefik.http.services.{{ secrets.PAPERLESS.USERNAME }}.loadbalancer.server.port=8000
    - traefik.http.routers.{{ secrets.PAPERLESS.USERNAME }}.tls=true
    - traefik.http.routers.{{ secrets.PAPERLESS.USERNAME }}.tls.certresolver=production
    healthcheck:
      test: [CMD, curl, -fs, -S, --max-time, '2', 'http://localhost:8000']
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
    - ./data:/usr/src/paperless/data
    - ./media:/usr/src/paperless/media
    - ./export:/usr/src/paperless/export
    - ./consume:/usr/src/paperless/consume
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_URL: https://{{ secrets.PAPERLESS.USERNAME }}.{{ secrets.MY_DOMAIN }}
      PAPERLESS_CSRF_TRUSTED_ORIGINS: https://{{ secrets.PAPERLESS.USERNAME }}.{{ secrets.MY_DOMAIN }}
      PAPERLESS_CORS_ALLOWED_HOSTS: https://{{ secrets.PAPERLESS.USERNAME }}.{{ secrets.MY_DOMAIN }}

volumes:
  redisdata:
