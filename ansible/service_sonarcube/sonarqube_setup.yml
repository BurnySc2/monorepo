# https://hub.docker.com/_/sonarqube
# https://docs.sonarsource.com/sonarqube/latest/setup-and-upgrade/install-the-server/installing-sonarqube-from-docker/
# https://docs.sonarsource.com/sonarqube/9.9/devops-platform-integration/github-integration/
# Execute with
# ansible-playbook sonarqube_setup.yml -i ../hosts -i /home/burny/syncthing/secrets/ansible_secrets/.ansible_secrets
- name: Create and start sonarqube service
  hosts: my_servers
  vars:
    USERNAME: "{{ secrets.SONARQUBE.USERNAME }}"
  tasks:
    - name: Create group
      ansible.builtin.group:
        name: "{{ USERNAME }}"
        state: present

    - name: Create user
      ansible.builtin.user:
        name: "{{ USERNAME }}"
        groups:
          - "{{ USERNAME }}"
          - docker
        shell: "{{ secrets.DEFAULT_SHELL }}"

    - name: Get user id
      ansible.builtin.shell:
        cmd: id {{ USERNAME }} -u
      register: USER_ID

    - name: Get group id
      ansible.builtin.shell:
        cmd: id {{ USERNAME }} -g
      register: GROUP_ID

    - name: Print user id
      ansible.builtin.debug:
        var: USER_ID.stdout
        verbosity: 0

    - name: Print group id
      ansible.builtin.debug:
        var: GROUP_ID.stdout
        verbosity: 0

    - name: Set vm.max_map_count
      ansible.posix.sysctl:
        name: vm.max_map_count
        value: "524288"
        state: present

    - name: Set fs.file-max
      ansible.posix.sysctl:
        name: fs.file-max
        value: "131072"
        state: present

    - name: Create systemd file
      template:
        src: sonarqube.service
        dest: /etc/systemd/system/{{ USERNAME }}.service
        owner: "{{ USER_ID.stdout }}"
        group: "{{ GROUP_ID.stdout }}"

    - name: Create docker-compose.yml file
      template:
        src: docker-compose.yml
        dest: /home/{{ USERNAME }}/docker-compose.yml
        owner: "{{ USER_ID.stdout }}"
        group: "{{ GROUP_ID.stdout }}"

    - name: Stop sonarqube service
      ansible.builtin.systemd_service:
        name: "{{ USERNAME }}"
        state: stopped
        enabled: false

    - name: Remove sonarqube-server container
      community.docker.docker_container:
        name: sonarqube-community
        state: absent
        image: sonarqube:lts-community

    - name: Remove sonarqube-db container
      community.docker.docker_container:
        name: sonarqube-db
        state: absent
        image: postgres:12

    - name: Start sonarqube service again
      ansible.builtin.systemd_service:
        name: "{{ USERNAME }}"
        state: started
        daemon_reload: true
        enabled: true

    - name: Print reminder to change admin password
      ansible.builtin.debug:
        msg: Initial login is 'admin' with password 'admin'. Change it immediately!
