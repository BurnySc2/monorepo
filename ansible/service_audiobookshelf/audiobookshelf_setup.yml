# https://www.audiobookshelf.org/
# https://www.audiobookshelf.org/docs#docker-install
# https://play.google.com/store/apps/details?id=com.audiobookshelf.app
# Find podcasts:
# https://www.listennotes.com/
# https://castos.com/tools/find-podcast-rss-feed/
# Execute with
# ansible-playbook audiobookshelf_setup.yml -i ../hosts -i /home/burny/syncthing/secrets/ansible_secrets/.ansible_secrets
- name: Create service
  hosts: my_servers
  vars:
    USERNAME: "{{ secrets.AUDIOBOOKSHELF.USERNAME }}"
    SUBDOMAIN: "{{ secrets.AUDIOBOOKSHELF.SUBDOMAIN }}"
    DOCKER_IMAGE: ghcr.io/advplyr/audiobookshelf
    APPLICATION_PORT: "80"
  tasks:
    # https://stackoverflow.com/a/64100593
    - name: Create Traefik labels's dictionary
      set_fact:
        my_labels: "{{ my_labels | default({}) | combine ({ item.key : item.value }) }}"
      with_items:
        - { "key": "traefik.enable", "value": "true" }
        - {
            "key": "traefik.http.routers.{{ SUBDOMAIN }}.rule",
            "value": "Host(`{{ SUBDOMAIN }}.{{ secrets.MY_DOMAIN }}`)",
          }
        - {
            "key": "traefik.http.services.{{ SUBDOMAIN }}.loadbalancer.server.port",
            "value": "{{ APPLICATION_PORT }}",
          }
        - { "key": "traefik.http.routers.{{ SUBDOMAIN }}.tls", "value": "true" }
        - {
            "key": "traefik.http.routers.{{ SUBDOMAIN }}.tls.certresolver",
            "value": "production",
          }
        - {
            "key": "traefik.http.routers.{{ SUBDOMAIN }}.middlewares",
            "value": "authelia@docker",
          }

    - name: Create group
      ansible.builtin.group:
        name: "{{ USERNAME }}"
        state: present

    - name: Create user
      ansible.builtin.user:
        name: "{{ USERNAME }}"
        groups:
          - "{{ USERNAME }}"
          - docker
        shell: "{{ secrets.DEFAULT_SHELL }}"

    - name: Stop container
      community.docker.docker_container:
        name: "{{ USERNAME }}"
        image: "{{ DOCKER_IMAGE }}"
        state: absent

    # Comment out to skip update
    # - name: Remove image
    #   community.docker.docker_image:
    #     name: '{{ DOCKER_IMAGE }}'
    #     state: absent

    - name: Start container
      community.docker.docker_container:
        name: "{{ USERNAME }}"
        image: "{{ DOCKER_IMAGE }}"
        state: started
        restart: yes
        restart_policy: unless-stopped
        volumes:
          - "/home/{{ USERNAME }}/config:/config"
          - "/home/{{ USERNAME }}/metadata:/metadata"
          - "{{ secrets.AUDIOBOOKSHELF.MEDIA_FOLDER_AUDIOBOOKS }}:/audiobooks"
          - "{{ secrets.AUDIOBOOKSHELF.MEDIA_FOLDER_PODCASTS }}:/podcasts"
        networks:
          - name: "{{ secrets.TRAFIK_NETWORK }}"
        labels: "{{ my_labels }}"
