[tool.poetry]
name = "python_template"
version = "0.2.0"
description = ""
authors = ["BuRny <gamingburny@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.8 <3.11"
# Numeric python
numpy = "^1.21"
# Write and read classes to/from json
dataclasses-json = "^0.5"
# Network access
aiohttp = "^3.7"
requests = "^2.26"
# Required by aiohttp on windows?
idna-ssl = "^1.1"
# Simple logger
loguru = "^0.5"
# Required by loguru on windows?
aiocontextvars = "^0.2"
atomicwrites = "^1.3"
contextvars = "^2.4"
win32-setctime = "^1.0"
# Image library
pillow = "^8.2"
# Better / easier datetime library
pendulum = "^2.1"
# Easier nested dictionary manipulation
dpath = "^2.0"
# File watcher
watchgod = "^0.7"
# Database with ORM
SQLAlchemy = "^1.4"
# Simple database that operates on dictionaries
tinydb = "^4.5"
# New popular database mongodb
pymongo = "^3.12"
# Generate text
lorem-text = "^2.1"
# https://github.com/tiangolo/sqlmodel
sqlmodel = "^0.0.6"
# Geometry manipulation
Shapely = "^1.8"
# Fastapi server
fastapi = "^0.70"
uvicorn = "^0.16"
# Python JSON Web Token implementation
PyJWT = "^2.3"
# End to end tests - TODO Find alternative because the dependency tree is huge
seleniumbase = "^2.3"
# Info about the system
psutil = "^5.8"
# Graphql backend implementation
strawberry-graphql = "^0.93"
# Execute command on server via SSH, or push files via SFTP
paramiko = "^2.8"
#types-paramiko = "^2.8"
# Simpler argparse
click = "^7.1"
# SQL ORM
peewee = "^3.14"
# Sync mongoDB ODM
mongoengine = "^0.23"
# Async mongoDB ODM
beanie = "^1.8"
# Contracts https://github.com/life4/deal
deal = "^4.19"
# Create sqlalchemy migrations
alembic = "^1.7"
# Load environment variables from .env file
python-dotenv = "^0.19"
# Send emails via https://sendgrid.com/
sendgrid = "^6.9"

[tool.poetry.dev-dependencies]
# Autoformatter
yapf = "^0.32"
# Linting
pylint = "^2.12"
# Test library
pytest = "^6.2"
pytest-asyncio = "^0.16"
pytest-cov = "^3.0"
pytest-benchmark = "^3.4"
# Type checking
mypy = "^0.930"
# Statistical testing
hypothesis = "^6.34"
# Cyclomatic complexity checker
radon = "^5.0"
# Function profiler, checks how often functions get called
snakeviz = "^2.1"
# Line profiler
scalene = "^1.3.16"
# Line profiler, unable to install on windows?
# line_profiler = "^3.0"
# Required by line_profiler
# ipython = "^7.16"
# Enable pre commit hooks
pre-commit = "^2.15"

[tool.poetry.scripts]
# Can be launched via 'poetry run python_examples_main'
python_examples_main = "python_examples.main:main_sync"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.masonry.api"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
plugins = "strawberry.ext.mypy_plugin"

[tool.pycln]
all = true

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.design]
# Maximum number of locals for function / method body
max-locals = 25
[tool.pylint.messages_control]
max-line-length = 120
# C0301,E501 2x Line too long
# C0114 module Docstring
# C0115 missing class docstring
# C0116 missing function docstring
# R0913 function with too many arguments
# C0413 import order
# C0411 import order of external libs
# W0511 TODO
# W0105 string statement with no effect
# R0801 duplicate code
# W0621 redefining name from outer score
# C0103 variable name does not conform snake case naming style
# R0903 Too few public methods of a class
# E1101 Class 'SqlMetaclass' has no '__annotations__' member (no-member)
# R0201 Method could be a function (no-self-use)
# W0603 Allow global
# W0212 Access to a protected member _cookies of a client class (protected-access)
disable = "C0301,E501, C0114, C0115, C0116, R0913, C0413, C0411, W0511, W0105, R0801, W0621, C0103, R0903, E1101, R0201, W0603, W0212"

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
split_arguments_when_comma_terminated = true
dedent_closing_brackets = true

[tool.coverage.report]
exclude_lines = ["def __repr__", "def main", "if __name__ == .__main__.:", "if 0:", "if False:"]
