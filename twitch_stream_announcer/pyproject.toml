[tool.poetry]
name = "twitch-stream-announcer-webhook"
version = "0.1.0"
description = ""
authors = ["BuRny <gamingburny@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9 <3.13"
aiohttp = "^3.7.4"
loguru = "^0.6.0"
discord = "^1.0.1"
asyncpg = "^0.29.0"
python-dotenv = "^1.0.0"
arrow = "^1.3.0"
twitchapi = "^4.1.0"

[tool.poetry.group.dev.dependencies]
# Autoformat
yapf = "^0.32.0"
toml = "^0.10.2"
# Linter
ruff = "^0.1.14"
# Type checker
pyre-check = "^0.9.18"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
split_arguments_when_comma_terminated = true
dedent_closing_brackets = true
allow_split_before_dict_value = false

[tool.ruff]
target-version = 'py310'
line-length = 120
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = [
    "C4", # flake8-comprehensions
    "E",  # Error
    "F",  # pyflakes
    "BLE",  # flake8-blind-except
    "I",  # isort
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "W",  # Warning
    "Q",  # flake8-quotes
    "YTT", # flake8-2020
    "UP",  # pyupgrade
#    "A",  # flake8-builtins
]

[tool.ruff.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["pydantic.validator", "classmethod"]
